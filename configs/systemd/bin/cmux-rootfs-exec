#!/usr/bin/env bash
set -euo pipefail

# Ensures runtime overlay is mounted (if configured) and executes the given command
# with environment variables pointing at the merged filesystem. This replaces the
# previous chroot-based implementation so that host binaries remain accessible.

rootfs="${CMUX_ROOTFS:-/}"
runtime_root="${CMUX_RUNTIME_ROOT:-${CMUX_ROOTFS:-/}}"
overlay_upper="${CMUX_OVERLAY_UPPER:-/opt/app/overlay/upper}"
overlay_work="${CMUX_OVERLAY_WORK:-/opt/app/overlay/work}"

ensure_overlay() {
  if [[ "${runtime_root}" == "/" || "${rootfs}" == "/" ]]; then
    runtime_root="/"
    return
  fi

  if mountpoint -q "${runtime_root}"; then
    return
  fi

  if [[ ! -d "${rootfs}" ]]; then
    echo "cmux-rootfs-exec: CMUX_ROOTFS ${rootfs} does not exist" >&2
    exit 1
  fi

  mkdir -p "${runtime_root}" "${overlay_upper}" "${overlay_work}"

  # Attempt to mount overlay; if already mounted by another unit, tolerate the EBUSY case.
  if ! mount -t overlay overlay \
    -o "lowerdir=${rootfs},upperdir=${overlay_upper},workdir=${overlay_work}" \
    "${runtime_root}" 2>/tmp/cmux-overlay-mount.err; then
    err=$(< /tmp/cmux-overlay-mount.err)
    rm -f /tmp/cmux-overlay-mount.err
    if grep -q "busy" <<<"${err}"; then
      # Someone else mounted concurrently; verify mountpoint now exists.
      if ! mountpoint -q "${runtime_root}"; then
        echo "cmux-rootfs-exec: failed to mount overlay: ${err}" >&2
        exit 1
      fi
    else
      echo "cmux-rootfs-exec: failed to mount overlay: ${err}" >&2
      exit 1
    fi
  else
    rm -f /tmp/cmux-overlay-mount.err
  fi
}

ensure_overlay

export CMUX_ROOTFS="${rootfs}"
export CMUX_RUNTIME_ROOT="${runtime_root}"

runtime_path_prefix="${runtime_root}/usr/local/sbin:${runtime_root}/usr/local/bin:${runtime_root}/usr/sbin:${runtime_root}/usr/bin:${runtime_root}/sbin:${runtime_root}/bin"
if [[ "${runtime_root}" != "/" ]]; then
  if [[ -n "${PATH:-}" ]]; then
    export PATH="${runtime_path_prefix}:${PATH}"
  else
    export PATH="${runtime_path_prefix}"
  fi

  lib_candidates=(
    "${runtime_root}/lib/x86_64-linux-gnu"
    "${runtime_root}/usr/lib/x86_64-linux-gnu"
    "${runtime_root}/lib/aarch64-linux-gnu"
    "${runtime_root}/usr/lib/aarch64-linux-gnu"
    "${runtime_root}/lib"
    "${runtime_root}/usr/lib"
  )
  runtime_ld=""
  for candidate in "${lib_candidates[@]}"; do
    if [[ -d "${candidate}" ]]; then
      if [[ -z "${runtime_ld}" ]]; then
        runtime_ld="${candidate}"
      else
        runtime_ld="${runtime_ld}:${candidate}"
      fi
    fi
  done
  if [[ -n "${runtime_ld}" ]]; then
    if [[ -n "${LD_LIBRARY_PATH:-}" ]]; then
      export LD_LIBRARY_PATH="${runtime_ld}:${LD_LIBRARY_PATH}"
    else
      export LD_LIBRARY_PATH="${runtime_ld}"
    fi
  fi
fi

exec "$@"
