/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HandlerSplatRouteImport } from './routes/handler.$'
import { Route as LayoutTeamPickerRouteImport } from './routes/_layout.team-picker'
import { Route as LayoutProfileRouteImport } from './routes/_layout.profile'
import { Route as LayoutDebugRouteImport } from './routes/_layout.debug'
import { Route as LayoutTeamSlugOrIdRouteImport } from './routes/_layout.$teamSlugOrId'
import { Route as LayoutTeamSlugOrIdSettingsRouteImport } from './routes/_layout.$teamSlugOrId.settings'
import { Route as LayoutTeamSlugOrIdEnvironmentsRouteImport } from './routes/_layout.$teamSlugOrId.environments'
import { Route as LayoutTeamSlugOrIdDiffRouteImport } from './routes/_layout.$teamSlugOrId.diff'
import { Route as LayoutTeamSlugOrIdDashboardRouteImport } from './routes/_layout.$teamSlugOrId.dashboard'
import { Route as LayoutTeamSlugOrIdConnectCompleteRouteImport } from './routes/_layout.$teamSlugOrId.connect-complete'
import { Route as LayoutTeamSlugOrIdEnvironmentsIndexRouteImport } from './routes/_layout.$teamSlugOrId.environments.index'
import { Route as LayoutTeamSlugOrIdTaskTaskIdRouteImport } from './routes/_layout.$teamSlugOrId.task.$taskId'
import { Route as LayoutTeamSlugOrIdEnvironmentsNewRouteImport } from './routes/_layout.$teamSlugOrId.environments.new'
import { Route as LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRouteImport } from './routes/_layout.$teamSlugOrId.environments.$environmentId'
import { Route as LayoutTeamSlugOrIdTaskTaskIdIndexRouteImport } from './routes/_layout.$teamSlugOrId.task.$taskId.index'
import { Route as LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRouteImport } from './routes/_layout.$teamSlugOrId.task.$taskId.run.$taskRunId'
import { Route as LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRouteImport } from './routes/_layout.$teamSlugOrId.task.$taskId.run.$runId.vscode'
import { Route as LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRouteImport } from './routes/_layout.$teamSlugOrId.task.$taskId.run.$runId.pr'
import { Route as LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRouteImport } from './routes/_layout.$teamSlugOrId.task.$taskId.run.$runId.diff'
import { Route as LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRouteImport } from './routes/_layout.$teamSlugOrId.task.$taskId.run.$runId.preview.$port'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HandlerSplatRoute = HandlerSplatRouteImport.update({
  id: '/handler/$',
  path: '/handler/$',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutTeamPickerRoute = LayoutTeamPickerRouteImport.update({
  id: '/team-picker',
  path: '/team-picker',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProfileRoute = LayoutProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDebugRoute = LayoutDebugRouteImport.update({
  id: '/debug',
  path: '/debug',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamSlugOrIdRoute = LayoutTeamSlugOrIdRouteImport.update({
  id: '/$teamSlugOrId',
  path: '/$teamSlugOrId',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamSlugOrIdSettingsRoute =
  LayoutTeamSlugOrIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => LayoutTeamSlugOrIdRoute,
  } as any)
const LayoutTeamSlugOrIdEnvironmentsRoute =
  LayoutTeamSlugOrIdEnvironmentsRouteImport.update({
    id: '/environments',
    path: '/environments',
    getParentRoute: () => LayoutTeamSlugOrIdRoute,
  } as any)
const LayoutTeamSlugOrIdDiffRoute = LayoutTeamSlugOrIdDiffRouteImport.update({
  id: '/diff',
  path: '/diff',
  getParentRoute: () => LayoutTeamSlugOrIdRoute,
} as any)
const LayoutTeamSlugOrIdDashboardRoute =
  LayoutTeamSlugOrIdDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => LayoutTeamSlugOrIdRoute,
  } as any)
const LayoutTeamSlugOrIdConnectCompleteRoute =
  LayoutTeamSlugOrIdConnectCompleteRouteImport.update({
    id: '/connect-complete',
    path: '/connect-complete',
    getParentRoute: () => LayoutTeamSlugOrIdRoute,
  } as any)
const LayoutTeamSlugOrIdEnvironmentsIndexRoute =
  LayoutTeamSlugOrIdEnvironmentsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutTeamSlugOrIdEnvironmentsRoute,
  } as any)
const LayoutTeamSlugOrIdTaskTaskIdRoute =
  LayoutTeamSlugOrIdTaskTaskIdRouteImport.update({
    id: '/task/$taskId',
    path: '/task/$taskId',
    getParentRoute: () => LayoutTeamSlugOrIdRoute,
  } as any)
const LayoutTeamSlugOrIdEnvironmentsNewRoute =
  LayoutTeamSlugOrIdEnvironmentsNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => LayoutTeamSlugOrIdEnvironmentsRoute,
  } as any)
const LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute =
  LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRouteImport.update({
    id: '/$environmentId',
    path: '/$environmentId',
    getParentRoute: () => LayoutTeamSlugOrIdEnvironmentsRoute,
  } as any)
const LayoutTeamSlugOrIdTaskTaskIdIndexRoute =
  LayoutTeamSlugOrIdTaskTaskIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutTeamSlugOrIdTaskTaskIdRoute,
  } as any)
const LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute =
  LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRouteImport.update({
    id: '/run/$taskRunId',
    path: '/run/$taskRunId',
    getParentRoute: () => LayoutTeamSlugOrIdTaskTaskIdRoute,
  } as any)
const LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute =
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRouteImport.update({
    id: '/run/$runId/vscode',
    path: '/run/$runId/vscode',
    getParentRoute: () => LayoutTeamSlugOrIdTaskTaskIdRoute,
  } as any)
const LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute =
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRouteImport.update({
    id: '/run/$runId/pr',
    path: '/run/$runId/pr',
    getParentRoute: () => LayoutTeamSlugOrIdTaskTaskIdRoute,
  } as any)
const LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute =
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRouteImport.update({
    id: '/run/$runId/diff',
    path: '/run/$runId/diff',
    getParentRoute: () => LayoutTeamSlugOrIdTaskTaskIdRoute,
  } as any)
const LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute =
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRouteImport.update({
    id: '/run/$runId/preview/$port',
    path: '/run/$runId/preview/$port',
    getParentRoute: () => LayoutTeamSlugOrIdTaskTaskIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$teamSlugOrId': typeof LayoutTeamSlugOrIdRouteWithChildren
  '/debug': typeof LayoutDebugRoute
  '/profile': typeof LayoutProfileRoute
  '/team-picker': typeof LayoutTeamPickerRoute
  '/handler/$': typeof HandlerSplatRoute
  '/$teamSlugOrId/connect-complete': typeof LayoutTeamSlugOrIdConnectCompleteRoute
  '/$teamSlugOrId/dashboard': typeof LayoutTeamSlugOrIdDashboardRoute
  '/$teamSlugOrId/diff': typeof LayoutTeamSlugOrIdDiffRoute
  '/$teamSlugOrId/environments': typeof LayoutTeamSlugOrIdEnvironmentsRouteWithChildren
  '/$teamSlugOrId/settings': typeof LayoutTeamSlugOrIdSettingsRoute
  '/$teamSlugOrId/environments/$environmentId': typeof LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute
  '/$teamSlugOrId/environments/new': typeof LayoutTeamSlugOrIdEnvironmentsNewRoute
  '/$teamSlugOrId/task/$taskId': typeof LayoutTeamSlugOrIdTaskTaskIdRouteWithChildren
  '/$teamSlugOrId/environments/': typeof LayoutTeamSlugOrIdEnvironmentsIndexRoute
  '/$teamSlugOrId/task/$taskId/': typeof LayoutTeamSlugOrIdTaskTaskIdIndexRoute
  '/$teamSlugOrId/task/$taskId/run/$taskRunId': typeof LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/diff': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/pr': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/vscode': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/preview/$port': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$teamSlugOrId': typeof LayoutTeamSlugOrIdRouteWithChildren
  '/debug': typeof LayoutDebugRoute
  '/profile': typeof LayoutProfileRoute
  '/team-picker': typeof LayoutTeamPickerRoute
  '/handler/$': typeof HandlerSplatRoute
  '/$teamSlugOrId/connect-complete': typeof LayoutTeamSlugOrIdConnectCompleteRoute
  '/$teamSlugOrId/dashboard': typeof LayoutTeamSlugOrIdDashboardRoute
  '/$teamSlugOrId/diff': typeof LayoutTeamSlugOrIdDiffRoute
  '/$teamSlugOrId/settings': typeof LayoutTeamSlugOrIdSettingsRoute
  '/$teamSlugOrId/environments/$environmentId': typeof LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute
  '/$teamSlugOrId/environments/new': typeof LayoutTeamSlugOrIdEnvironmentsNewRoute
  '/$teamSlugOrId/environments': typeof LayoutTeamSlugOrIdEnvironmentsIndexRoute
  '/$teamSlugOrId/task/$taskId': typeof LayoutTeamSlugOrIdTaskTaskIdIndexRoute
  '/$teamSlugOrId/task/$taskId/run/$taskRunId': typeof LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/diff': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/pr': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/vscode': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute
  '/$teamSlugOrId/task/$taskId/run/$runId/preview/$port': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/$teamSlugOrId': typeof LayoutTeamSlugOrIdRouteWithChildren
  '/_layout/debug': typeof LayoutDebugRoute
  '/_layout/profile': typeof LayoutProfileRoute
  '/_layout/team-picker': typeof LayoutTeamPickerRoute
  '/handler/$': typeof HandlerSplatRoute
  '/_layout/$teamSlugOrId/connect-complete': typeof LayoutTeamSlugOrIdConnectCompleteRoute
  '/_layout/$teamSlugOrId/dashboard': typeof LayoutTeamSlugOrIdDashboardRoute
  '/_layout/$teamSlugOrId/diff': typeof LayoutTeamSlugOrIdDiffRoute
  '/_layout/$teamSlugOrId/environments': typeof LayoutTeamSlugOrIdEnvironmentsRouteWithChildren
  '/_layout/$teamSlugOrId/settings': typeof LayoutTeamSlugOrIdSettingsRoute
  '/_layout/$teamSlugOrId/environments/$environmentId': typeof LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute
  '/_layout/$teamSlugOrId/environments/new': typeof LayoutTeamSlugOrIdEnvironmentsNewRoute
  '/_layout/$teamSlugOrId/task/$taskId': typeof LayoutTeamSlugOrIdTaskTaskIdRouteWithChildren
  '/_layout/$teamSlugOrId/environments/': typeof LayoutTeamSlugOrIdEnvironmentsIndexRoute
  '/_layout/$teamSlugOrId/task/$taskId/': typeof LayoutTeamSlugOrIdTaskTaskIdIndexRoute
  '/_layout/$teamSlugOrId/task/$taskId/run/$taskRunId': typeof LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute
  '/_layout/$teamSlugOrId/task/$taskId/run/$runId/diff': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute
  '/_layout/$teamSlugOrId/task/$taskId/run/$runId/pr': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute
  '/_layout/$teamSlugOrId/task/$taskId/run/$runId/vscode': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute
  '/_layout/$teamSlugOrId/task/$taskId/run/$runId/preview/$port': typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$teamSlugOrId'
    | '/debug'
    | '/profile'
    | '/team-picker'
    | '/handler/$'
    | '/$teamSlugOrId/connect-complete'
    | '/$teamSlugOrId/dashboard'
    | '/$teamSlugOrId/diff'
    | '/$teamSlugOrId/environments'
    | '/$teamSlugOrId/settings'
    | '/$teamSlugOrId/environments/$environmentId'
    | '/$teamSlugOrId/environments/new'
    | '/$teamSlugOrId/task/$taskId'
    | '/$teamSlugOrId/environments/'
    | '/$teamSlugOrId/task/$taskId/'
    | '/$teamSlugOrId/task/$taskId/run/$taskRunId'
    | '/$teamSlugOrId/task/$taskId/run/$runId/diff'
    | '/$teamSlugOrId/task/$taskId/run/$runId/pr'
    | '/$teamSlugOrId/task/$taskId/run/$runId/vscode'
    | '/$teamSlugOrId/task/$taskId/run/$runId/preview/$port'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$teamSlugOrId'
    | '/debug'
    | '/profile'
    | '/team-picker'
    | '/handler/$'
    | '/$teamSlugOrId/connect-complete'
    | '/$teamSlugOrId/dashboard'
    | '/$teamSlugOrId/diff'
    | '/$teamSlugOrId/settings'
    | '/$teamSlugOrId/environments/$environmentId'
    | '/$teamSlugOrId/environments/new'
    | '/$teamSlugOrId/environments'
    | '/$teamSlugOrId/task/$taskId'
    | '/$teamSlugOrId/task/$taskId/run/$taskRunId'
    | '/$teamSlugOrId/task/$taskId/run/$runId/diff'
    | '/$teamSlugOrId/task/$taskId/run/$runId/pr'
    | '/$teamSlugOrId/task/$taskId/run/$runId/vscode'
    | '/$teamSlugOrId/task/$taskId/run/$runId/preview/$port'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/$teamSlugOrId'
    | '/_layout/debug'
    | '/_layout/profile'
    | '/_layout/team-picker'
    | '/handler/$'
    | '/_layout/$teamSlugOrId/connect-complete'
    | '/_layout/$teamSlugOrId/dashboard'
    | '/_layout/$teamSlugOrId/diff'
    | '/_layout/$teamSlugOrId/environments'
    | '/_layout/$teamSlugOrId/settings'
    | '/_layout/$teamSlugOrId/environments/$environmentId'
    | '/_layout/$teamSlugOrId/environments/new'
    | '/_layout/$teamSlugOrId/task/$taskId'
    | '/_layout/$teamSlugOrId/environments/'
    | '/_layout/$teamSlugOrId/task/$taskId/'
    | '/_layout/$teamSlugOrId/task/$taskId/run/$taskRunId'
    | '/_layout/$teamSlugOrId/task/$taskId/run/$runId/diff'
    | '/_layout/$teamSlugOrId/task/$taskId/run/$runId/pr'
    | '/_layout/$teamSlugOrId/task/$taskId/run/$runId/vscode'
    | '/_layout/$teamSlugOrId/task/$taskId/run/$runId/preview/$port'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  HandlerSplatRoute: typeof HandlerSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/handler/$': {
      id: '/handler/$'
      path: '/handler/$'
      fullPath: '/handler/$'
      preLoaderRoute: typeof HandlerSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/team-picker': {
      id: '/_layout/team-picker'
      path: '/team-picker'
      fullPath: '/team-picker'
      preLoaderRoute: typeof LayoutTeamPickerRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/profile': {
      id: '/_layout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutProfileRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/debug': {
      id: '/_layout/debug'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof LayoutDebugRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlugOrId': {
      id: '/_layout/$teamSlugOrId'
      path: '/$teamSlugOrId'
      fullPath: '/$teamSlugOrId'
      preLoaderRoute: typeof LayoutTeamSlugOrIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlugOrId/settings': {
      id: '/_layout/$teamSlugOrId/settings'
      path: '/settings'
      fullPath: '/$teamSlugOrId/settings'
      preLoaderRoute: typeof LayoutTeamSlugOrIdSettingsRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdRoute
    }
    '/_layout/$teamSlugOrId/environments': {
      id: '/_layout/$teamSlugOrId/environments'
      path: '/environments'
      fullPath: '/$teamSlugOrId/environments'
      preLoaderRoute: typeof LayoutTeamSlugOrIdEnvironmentsRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdRoute
    }
    '/_layout/$teamSlugOrId/diff': {
      id: '/_layout/$teamSlugOrId/diff'
      path: '/diff'
      fullPath: '/$teamSlugOrId/diff'
      preLoaderRoute: typeof LayoutTeamSlugOrIdDiffRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdRoute
    }
    '/_layout/$teamSlugOrId/dashboard': {
      id: '/_layout/$teamSlugOrId/dashboard'
      path: '/dashboard'
      fullPath: '/$teamSlugOrId/dashboard'
      preLoaderRoute: typeof LayoutTeamSlugOrIdDashboardRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdRoute
    }
    '/_layout/$teamSlugOrId/connect-complete': {
      id: '/_layout/$teamSlugOrId/connect-complete'
      path: '/connect-complete'
      fullPath: '/$teamSlugOrId/connect-complete'
      preLoaderRoute: typeof LayoutTeamSlugOrIdConnectCompleteRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdRoute
    }
    '/_layout/$teamSlugOrId/environments/': {
      id: '/_layout/$teamSlugOrId/environments/'
      path: '/'
      fullPath: '/$teamSlugOrId/environments/'
      preLoaderRoute: typeof LayoutTeamSlugOrIdEnvironmentsIndexRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdEnvironmentsRoute
    }
    '/_layout/$teamSlugOrId/task/$taskId': {
      id: '/_layout/$teamSlugOrId/task/$taskId'
      path: '/task/$taskId'
      fullPath: '/$teamSlugOrId/task/$taskId'
      preLoaderRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdRoute
    }
    '/_layout/$teamSlugOrId/environments/new': {
      id: '/_layout/$teamSlugOrId/environments/new'
      path: '/new'
      fullPath: '/$teamSlugOrId/environments/new'
      preLoaderRoute: typeof LayoutTeamSlugOrIdEnvironmentsNewRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdEnvironmentsRoute
    }
    '/_layout/$teamSlugOrId/environments/$environmentId': {
      id: '/_layout/$teamSlugOrId/environments/$environmentId'
      path: '/$environmentId'
      fullPath: '/$teamSlugOrId/environments/$environmentId'
      preLoaderRoute: typeof LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdEnvironmentsRoute
    }
    '/_layout/$teamSlugOrId/task/$taskId/': {
      id: '/_layout/$teamSlugOrId/task/$taskId/'
      path: '/'
      fullPath: '/$teamSlugOrId/task/$taskId/'
      preLoaderRoute: typeof LayoutTeamSlugOrIdTaskTaskIdIndexRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRoute
    }
    '/_layout/$teamSlugOrId/task/$taskId/run/$taskRunId': {
      id: '/_layout/$teamSlugOrId/task/$taskId/run/$taskRunId'
      path: '/run/$taskRunId'
      fullPath: '/$teamSlugOrId/task/$taskId/run/$taskRunId'
      preLoaderRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRoute
    }
    '/_layout/$teamSlugOrId/task/$taskId/run/$runId/vscode': {
      id: '/_layout/$teamSlugOrId/task/$taskId/run/$runId/vscode'
      path: '/run/$runId/vscode'
      fullPath: '/$teamSlugOrId/task/$taskId/run/$runId/vscode'
      preLoaderRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRoute
    }
    '/_layout/$teamSlugOrId/task/$taskId/run/$runId/pr': {
      id: '/_layout/$teamSlugOrId/task/$taskId/run/$runId/pr'
      path: '/run/$runId/pr'
      fullPath: '/$teamSlugOrId/task/$taskId/run/$runId/pr'
      preLoaderRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRoute
    }
    '/_layout/$teamSlugOrId/task/$taskId/run/$runId/diff': {
      id: '/_layout/$teamSlugOrId/task/$taskId/run/$runId/diff'
      path: '/run/$runId/diff'
      fullPath: '/$teamSlugOrId/task/$taskId/run/$runId/diff'
      preLoaderRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRoute
    }
    '/_layout/$teamSlugOrId/task/$taskId/run/$runId/preview/$port': {
      id: '/_layout/$teamSlugOrId/task/$taskId/run/$runId/preview/$port'
      path: '/run/$runId/preview/$port'
      fullPath: '/$teamSlugOrId/task/$taskId/run/$runId/preview/$port'
      preLoaderRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRouteImport
      parentRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRoute
    }
  }
}

interface LayoutTeamSlugOrIdEnvironmentsRouteChildren {
  LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute: typeof LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute
  LayoutTeamSlugOrIdEnvironmentsNewRoute: typeof LayoutTeamSlugOrIdEnvironmentsNewRoute
  LayoutTeamSlugOrIdEnvironmentsIndexRoute: typeof LayoutTeamSlugOrIdEnvironmentsIndexRoute
}

const LayoutTeamSlugOrIdEnvironmentsRouteChildren: LayoutTeamSlugOrIdEnvironmentsRouteChildren =
  {
    LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute:
      LayoutTeamSlugOrIdEnvironmentsEnvironmentIdRoute,
    LayoutTeamSlugOrIdEnvironmentsNewRoute:
      LayoutTeamSlugOrIdEnvironmentsNewRoute,
    LayoutTeamSlugOrIdEnvironmentsIndexRoute:
      LayoutTeamSlugOrIdEnvironmentsIndexRoute,
  }

const LayoutTeamSlugOrIdEnvironmentsRouteWithChildren =
  LayoutTeamSlugOrIdEnvironmentsRoute._addFileChildren(
    LayoutTeamSlugOrIdEnvironmentsRouteChildren,
  )

interface LayoutTeamSlugOrIdTaskTaskIdRouteChildren {
  LayoutTeamSlugOrIdTaskTaskIdIndexRoute: typeof LayoutTeamSlugOrIdTaskTaskIdIndexRoute
  LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute
  LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute
}

const LayoutTeamSlugOrIdTaskTaskIdRouteChildren: LayoutTeamSlugOrIdTaskTaskIdRouteChildren =
  {
    LayoutTeamSlugOrIdTaskTaskIdIndexRoute:
      LayoutTeamSlugOrIdTaskTaskIdIndexRoute,
    LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute:
      LayoutTeamSlugOrIdTaskTaskIdRunTaskRunIdRoute,
    LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute:
      LayoutTeamSlugOrIdTaskTaskIdRunRunIdDiffRoute,
    LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute:
      LayoutTeamSlugOrIdTaskTaskIdRunRunIdPrRoute,
    LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute:
      LayoutTeamSlugOrIdTaskTaskIdRunRunIdVscodeRoute,
    LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute:
      LayoutTeamSlugOrIdTaskTaskIdRunRunIdPreviewPortRoute,
  }

const LayoutTeamSlugOrIdTaskTaskIdRouteWithChildren =
  LayoutTeamSlugOrIdTaskTaskIdRoute._addFileChildren(
    LayoutTeamSlugOrIdTaskTaskIdRouteChildren,
  )

interface LayoutTeamSlugOrIdRouteChildren {
  LayoutTeamSlugOrIdConnectCompleteRoute: typeof LayoutTeamSlugOrIdConnectCompleteRoute
  LayoutTeamSlugOrIdDashboardRoute: typeof LayoutTeamSlugOrIdDashboardRoute
  LayoutTeamSlugOrIdDiffRoute: typeof LayoutTeamSlugOrIdDiffRoute
  LayoutTeamSlugOrIdEnvironmentsRoute: typeof LayoutTeamSlugOrIdEnvironmentsRouteWithChildren
  LayoutTeamSlugOrIdSettingsRoute: typeof LayoutTeamSlugOrIdSettingsRoute
  LayoutTeamSlugOrIdTaskTaskIdRoute: typeof LayoutTeamSlugOrIdTaskTaskIdRouteWithChildren
}

const LayoutTeamSlugOrIdRouteChildren: LayoutTeamSlugOrIdRouteChildren = {
  LayoutTeamSlugOrIdConnectCompleteRoute:
    LayoutTeamSlugOrIdConnectCompleteRoute,
  LayoutTeamSlugOrIdDashboardRoute: LayoutTeamSlugOrIdDashboardRoute,
  LayoutTeamSlugOrIdDiffRoute: LayoutTeamSlugOrIdDiffRoute,
  LayoutTeamSlugOrIdEnvironmentsRoute:
    LayoutTeamSlugOrIdEnvironmentsRouteWithChildren,
  LayoutTeamSlugOrIdSettingsRoute: LayoutTeamSlugOrIdSettingsRoute,
  LayoutTeamSlugOrIdTaskTaskIdRoute:
    LayoutTeamSlugOrIdTaskTaskIdRouteWithChildren,
}

const LayoutTeamSlugOrIdRouteWithChildren =
  LayoutTeamSlugOrIdRoute._addFileChildren(LayoutTeamSlugOrIdRouteChildren)

interface LayoutRouteChildren {
  LayoutTeamSlugOrIdRoute: typeof LayoutTeamSlugOrIdRouteWithChildren
  LayoutDebugRoute: typeof LayoutDebugRoute
  LayoutProfileRoute: typeof LayoutProfileRoute
  LayoutTeamPickerRoute: typeof LayoutTeamPickerRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutTeamSlugOrIdRoute: LayoutTeamSlugOrIdRouteWithChildren,
  LayoutDebugRoute: LayoutDebugRoute,
  LayoutProfileRoute: LayoutProfileRoute,
  LayoutTeamPickerRoute: LayoutTeamPickerRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  HandlerSplatRoute: HandlerSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
