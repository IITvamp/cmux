interface PreviewErrorStateProps {
  error: LoadError | null;
  variant: "overlay" | "embedded";
  onRetry: () => void;
  onOpenDevTools?: () => void;
}

function PreviewErrorState({
  error,
  variant,
  onRetry,
  onOpenDevTools,
}: PreviewErrorStateProps) {
  const content = describeLoadError(error);
  const hasDetails = content.details.length > 0;
  const hasActions = Boolean(onRetry) || Boolean(onOpenDevTools);

  return (
    <div
      className={cn(
        "w-full max-w-sm rounded-lg border border-neutral-200 bg-white p-5 text-neutral-700 shadow-sm dark:border-neutral-800 dark:bg-neutral-900 dark:text-neutral-200",
        variant === "overlay"
          ? "shadow-lg ring-1 ring-neutral-900/5 dark:ring-neutral-100/10"
          : "mx-auto my-6",
      )}
    >
      {content.badgeLabel ? (
        <span className="mb-3 inline-flex items-center rounded-full bg-neutral-200 px-2 py-0.5 text-xs font-medium text-neutral-700 dark:bg-neutral-800 dark:text-neutral-300">
          {content.badgeLabel}
        </span>
      ) : null}
      <h2 className="text-base font-semibold text-neutral-900 dark:text-neutral-50">
        {content.title}
      </h2>
      <p className="mt-2 text-sm leading-relaxed text-neutral-600 dark:text-neutral-300">
        {content.description}
      </p>
      {hasDetails ? (
        <dl className="mt-4 space-y-2 text-xs text-neutral-500 dark:text-neutral-400">
          {content.details.map(({ label, value }) => (
            <div key={`${label}-${value}`}>
              <dt className="font-medium uppercase tracking-wide text-neutral-400 dark:text-neutral-500">
                {label}
              </dt>
              <dd className="mt-0.5 break-words text-neutral-600 dark:text-neutral-300">
                {value}
              </dd>
            </div>
          ))}
        </dl>
      ) : null}
      {hasActions ? (
        <div className="mt-4 flex flex-wrap gap-2">
          {onRetry ? (
            <Button type="button" size="sm" onClick={onRetry}>
              Retry
            </Button>
          ) : null}
          {onOpenDevTools ? (
            <Button
              type="button"
              size="sm"
              variant="outline"
              onClick={onOpenDevTools}
            >
              Open DevTools
            </Button>
          ) : null}
        </div>
      ) : null}
    </div>
  );
}
